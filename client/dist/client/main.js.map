{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from './http.service';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n  error: String;\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  submitButton() {\n    const observable = this._httpService.newMessage(this.username, this.message);\n    // console.log(this.date);\n    observable.subscribe(data => {\n      if ((data as any).message === 'Success') {\n        console.log(data);\n        this._router.navigate(['/landing']);\n      } else {\n        if ((data as any).err.errors !== undefined) {\n          this.error = 'error message';\n        }\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div id=\\\"hidden\\\" class=\\\"container\\\">\\n  <h1 class=\\\"display-4 font-weight-bold\\\">What Did You Say?</h1>\\n  <div class=\\\"messageview\\\">\\n    <!-- <table class=\\\"table table-sm table-responsive lead\\\">\\n      <tbody id=\\\"messages\\\">\\n        <% for (var x in key) { %>\\n        <tr>\\n          <td class=\\\"font-weight-bold\\\"><%= key[x].name %>:</td>\\n          <td><%= key[x].message %></td>\\n        </tr>\\n        <% } %>\\n      </tbody>\\n    </table> -->\\n  </div>\\n  <form id=\\\"forms\\\" (submit)=\\\"submitButton()\\\">\\n    <div class=\\\"form-group\\\">\\n      <input id=\\\"message\\\" type=\\\"text\\\" name=\\\"message\\\" class=\\\"form-control-sm align-top\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\">\\n      <button id=\\\"sendbutton\\\" class=\\\"btn btn-secondary btn-sm align-top\\\" type=\\\"submit\\\">Send</button>\\n    </div>\\n  </form>\\n</div>\\n<br> {{error}}\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private _httpService: HttpService) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  newMessage(username, messages) {\n    return this._http.post('/new', {\n      username: username,\n      messages: messages\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}